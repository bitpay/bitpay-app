import React from 'react';

export const ONE_INCH_ABI = [
  {
    inputs: [
      {internalType: 'address', name: 'weth', type: 'address'},
      {
        internalType: 'contract IClipperExchangeInterface',
        name: '_clipperExchange',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'orderHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'makingAmount',
        type: 'uint256',
      },
    ],
    name: 'OrderFilledRFQ',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DOMAIN_SEPARATOR',
    outputs: [{internalType: 'bytes32', name: '', type: 'bytes32'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LIMIT_ORDER_RFQ_TYPEHASH',
    outputs: [{internalType: 'bytes32', name: '', type: 'bytes32'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{internalType: 'uint256', name: 'orderInfo', type: 'uint256'}],
    name: 'cancelOrderRFQ',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'contract IERC20', name: 'srcToken', type: 'address'},
      {internalType: 'contract IERC20', name: 'dstToken', type: 'address'},
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
      {internalType: 'uint256', name: 'minReturn', type: 'uint256'},
    ],
    name: 'clipperSwap',
    outputs: [{internalType: 'uint256', name: 'returnAmount', type: 'uint256'}],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address payable', name: 'recipient', type: 'address'},
      {internalType: 'contract IERC20', name: 'srcToken', type: 'address'},
      {internalType: 'contract IERC20', name: 'dstToken', type: 'address'},
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
      {internalType: 'uint256', name: 'minReturn', type: 'uint256'},
    ],
    name: 'clipperSwapTo',
    outputs: [{internalType: 'uint256', name: 'returnAmount', type: 'uint256'}],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address payable', name: 'recipient', type: 'address'},
      {internalType: 'contract IERC20', name: 'srcToken', type: 'address'},
      {internalType: 'contract IERC20', name: 'dstToken', type: 'address'},
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
      {internalType: 'uint256', name: 'minReturn', type: 'uint256'},
      {internalType: 'bytes', name: 'permit', type: 'bytes'},
    ],
    name: 'clipperSwapToWithPermit',
    outputs: [{internalType: 'uint256', name: 'returnAmount', type: 'uint256'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'destroy',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {internalType: 'uint256', name: 'info', type: 'uint256'},
          {
            internalType: 'contract IERC20',
            name: 'makerAsset',
            type: 'address',
          },
          {
            internalType: 'contract IERC20',
            name: 'takerAsset',
            type: 'address',
          },
          {internalType: 'address', name: 'maker', type: 'address'},
          {internalType: 'address', name: 'allowedSender', type: 'address'},
          {internalType: 'uint256', name: 'makingAmount', type: 'uint256'},
          {internalType: 'uint256', name: 'takingAmount', type: 'uint256'},
        ],
        internalType: 'struct LimitOrderProtocolRFQ.OrderRFQ',
        name: 'order',
        type: 'tuple',
      },
      {internalType: 'bytes', name: 'signature', type: 'bytes'},
      {internalType: 'uint256', name: 'makingAmount', type: 'uint256'},
      {internalType: 'uint256', name: 'takingAmount', type: 'uint256'},
    ],
    name: 'fillOrderRFQ',
    outputs: [
      {internalType: 'uint256', name: '', type: 'uint256'},
      {internalType: 'uint256', name: '', type: 'uint256'},
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {internalType: 'uint256', name: 'info', type: 'uint256'},
          {
            internalType: 'contract IERC20',
            name: 'makerAsset',
            type: 'address',
          },
          {
            internalType: 'contract IERC20',
            name: 'takerAsset',
            type: 'address',
          },
          {internalType: 'address', name: 'maker', type: 'address'},
          {internalType: 'address', name: 'allowedSender', type: 'address'},
          {internalType: 'uint256', name: 'makingAmount', type: 'uint256'},
          {internalType: 'uint256', name: 'takingAmount', type: 'uint256'},
        ],
        internalType: 'struct LimitOrderProtocolRFQ.OrderRFQ',
        name: 'order',
        type: 'tuple',
      },
      {internalType: 'bytes', name: 'signature', type: 'bytes'},
      {internalType: 'uint256', name: 'makingAmount', type: 'uint256'},
      {internalType: 'uint256', name: 'takingAmount', type: 'uint256'},
      {internalType: 'address payable', name: 'target', type: 'address'},
    ],
    name: 'fillOrderRFQTo',
    outputs: [
      {internalType: 'uint256', name: '', type: 'uint256'},
      {internalType: 'uint256', name: '', type: 'uint256'},
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {internalType: 'uint256', name: 'info', type: 'uint256'},
          {
            internalType: 'contract IERC20',
            name: 'makerAsset',
            type: 'address',
          },
          {
            internalType: 'contract IERC20',
            name: 'takerAsset',
            type: 'address',
          },
          {internalType: 'address', name: 'maker', type: 'address'},
          {internalType: 'address', name: 'allowedSender', type: 'address'},
          {internalType: 'uint256', name: 'makingAmount', type: 'uint256'},
          {internalType: 'uint256', name: 'takingAmount', type: 'uint256'},
        ],
        internalType: 'struct LimitOrderProtocolRFQ.OrderRFQ',
        name: 'order',
        type: 'tuple',
      },
      {internalType: 'bytes', name: 'signature', type: 'bytes'},
      {internalType: 'uint256', name: 'makingAmount', type: 'uint256'},
      {internalType: 'uint256', name: 'takingAmount', type: 'uint256'},
      {internalType: 'address payable', name: 'target', type: 'address'},
      {internalType: 'bytes', name: 'permit', type: 'bytes'},
    ],
    name: 'fillOrderRFQToWithPermit',
    outputs: [
      {internalType: 'uint256', name: '', type: 'uint256'},
      {internalType: 'uint256', name: '', type: 'uint256'},
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'maker', type: 'address'},
      {internalType: 'uint256', name: 'slot', type: 'uint256'},
    ],
    name: 'invalidatorForOrderRFQ',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{internalType: 'address', name: '', type: 'address'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'contract IERC20', name: 'token', type: 'address'},
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
    ],
    name: 'rescueFunds',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IAggregationExecutor',
        name: 'caller',
        type: 'address',
      },
      {
        components: [
          {internalType: 'contract IERC20', name: 'srcToken', type: 'address'},
          {internalType: 'contract IERC20', name: 'dstToken', type: 'address'},
          {
            internalType: 'address payable',
            name: 'srcReceiver',
            type: 'address',
          },
          {
            internalType: 'address payable',
            name: 'dstReceiver',
            type: 'address',
          },
          {internalType: 'uint256', name: 'amount', type: 'uint256'},
          {internalType: 'uint256', name: 'minReturnAmount', type: 'uint256'},
          {internalType: 'uint256', name: 'flags', type: 'uint256'},
          {internalType: 'bytes', name: 'permit', type: 'bytes'},
        ],
        internalType: 'struct AggregationRouterV4.SwapDescription',
        name: 'desc',
        type: 'tuple',
      },
      {internalType: 'bytes', name: 'data', type: 'bytes'},
    ],
    name: 'swap',
    outputs: [
      {internalType: 'uint256', name: 'returnAmount', type: 'uint256'},
      {internalType: 'uint256', name: 'spentAmount', type: 'uint256'},
      {internalType: 'uint256', name: 'gasLeft', type: 'uint256'},
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: 'newOwner', type: 'address'}],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
      {internalType: 'uint256', name: 'minReturn', type: 'uint256'},
      {internalType: 'uint256[]', name: 'pools', type: 'uint256[]'},
    ],
    name: 'uniswapV3Swap',
    outputs: [{internalType: 'uint256', name: 'returnAmount', type: 'uint256'}],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'int256', name: 'amount0Delta', type: 'int256'},
      {internalType: 'int256', name: 'amount1Delta', type: 'int256'},
      {internalType: 'bytes', name: '', type: 'bytes'},
    ],
    name: 'uniswapV3SwapCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address payable', name: 'recipient', type: 'address'},
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
      {internalType: 'uint256', name: 'minReturn', type: 'uint256'},
      {internalType: 'uint256[]', name: 'pools', type: 'uint256[]'},
    ],
    name: 'uniswapV3SwapTo',
    outputs: [{internalType: 'uint256', name: 'returnAmount', type: 'uint256'}],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address payable', name: 'recipient', type: 'address'},
      {internalType: 'contract IERC20', name: 'srcToken', type: 'address'},
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
      {internalType: 'uint256', name: 'minReturn', type: 'uint256'},
      {internalType: 'uint256[]', name: 'pools', type: 'uint256[]'},
      {internalType: 'bytes', name: 'permit', type: 'bytes'},
    ],
    name: 'uniswapV3SwapToWithPermit',
    outputs: [{internalType: 'uint256', name: 'returnAmount', type: 'uint256'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'contract IERC20', name: 'srcToken', type: 'address'},
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
      {internalType: 'uint256', name: 'minReturn', type: 'uint256'},
      {internalType: 'bytes32[]', name: 'pools', type: 'bytes32[]'},
    ],
    name: 'unoswap',
    outputs: [{internalType: 'uint256', name: 'returnAmount', type: 'uint256'}],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'contract IERC20', name: 'srcToken', type: 'address'},
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
      {internalType: 'uint256', name: 'minReturn', type: 'uint256'},
      {internalType: 'bytes32[]', name: 'pools', type: 'bytes32[]'},
      {internalType: 'bytes', name: 'permit', type: 'bytes'},
    ],
    name: 'unoswapWithPermit',
    outputs: [{internalType: 'uint256', name: 'returnAmount', type: 'uint256'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {stateMutability: 'payable', type: 'receive'},
];

export const UNISWAP_V3_ABI = [
  {
    inputs: [
      {internalType: 'address', name: '_factory', type: 'address'},
      {internalType: 'address', name: '_WETH9', type: 'address'},
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'WETH9',
    outputs: [{internalType: 'address', name: '', type: 'address'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {internalType: 'bytes', name: 'path', type: 'bytes'},
          {internalType: 'address', name: 'recipient', type: 'address'},
          {internalType: 'uint256', name: 'deadline', type: 'uint256'},
          {internalType: 'uint256', name: 'amountIn', type: 'uint256'},
          {internalType: 'uint256', name: 'amountOutMinimum', type: 'uint256'},
        ],
        internalType: 'struct ISwapRouter.ExactInputParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'exactInput',
    outputs: [{internalType: 'uint256', name: 'amountOut', type: 'uint256'}],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {internalType: 'address', name: 'tokenIn', type: 'address'},
          {internalType: 'address', name: 'tokenOut', type: 'address'},
          {internalType: 'uint24', name: 'fee', type: 'uint24'},
          {internalType: 'address', name: 'recipient', type: 'address'},
          {internalType: 'uint256', name: 'deadline', type: 'uint256'},
          {internalType: 'uint256', name: 'amountIn', type: 'uint256'},
          {internalType: 'uint256', name: 'amountOutMinimum', type: 'uint256'},
          {internalType: 'uint160', name: 'sqrtPriceLimitX96', type: 'uint160'},
        ],
        internalType: 'struct ISwapRouter.ExactInputSingleParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'exactInputSingle',
    outputs: [{internalType: 'uint256', name: 'amountOut', type: 'uint256'}],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {internalType: 'bytes', name: 'path', type: 'bytes'},
          {internalType: 'address', name: 'recipient', type: 'address'},
          {internalType: 'uint256', name: 'deadline', type: 'uint256'},
          {internalType: 'uint256', name: 'amountOut', type: 'uint256'},
          {internalType: 'uint256', name: 'amountInMaximum', type: 'uint256'},
        ],
        internalType: 'struct ISwapRouter.ExactOutputParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'exactOutput',
    outputs: [{internalType: 'uint256', name: 'amountIn', type: 'uint256'}],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {internalType: 'address', name: 'tokenIn', type: 'address'},
          {internalType: 'address', name: 'tokenOut', type: 'address'},
          {internalType: 'uint24', name: 'fee', type: 'uint24'},
          {internalType: 'address', name: 'recipient', type: 'address'},
          {internalType: 'uint256', name: 'deadline', type: 'uint256'},
          {internalType: 'uint256', name: 'amountOut', type: 'uint256'},
          {internalType: 'uint256', name: 'amountInMaximum', type: 'uint256'},
          {internalType: 'uint160', name: 'sqrtPriceLimitX96', type: 'uint160'},
        ],
        internalType: 'struct ISwapRouter.ExactOutputSingleParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'exactOutputSingle',
    outputs: [{internalType: 'uint256', name: 'amountIn', type: 'uint256'}],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'factory',
    outputs: [{internalType: 'address', name: '', type: 'address'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{internalType: 'bytes[]', name: 'data', type: 'bytes[]'}],
    name: 'multicall',
    outputs: [{internalType: 'bytes[]', name: 'results', type: 'bytes[]'}],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'refundETH',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'uint256', name: 'value', type: 'uint256'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
      {internalType: 'uint8', name: 'v', type: 'uint8'},
      {internalType: 'bytes32', name: 'r', type: 'bytes32'},
      {internalType: 'bytes32', name: 's', type: 'bytes32'},
    ],
    name: 'selfPermit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'uint256', name: 'nonce', type: 'uint256'},
      {internalType: 'uint256', name: 'expiry', type: 'uint256'},
      {internalType: 'uint8', name: 'v', type: 'uint8'},
      {internalType: 'bytes32', name: 'r', type: 'bytes32'},
      {internalType: 'bytes32', name: 's', type: 'bytes32'},
    ],
    name: 'selfPermitAllowed',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'uint256', name: 'nonce', type: 'uint256'},
      {internalType: 'uint256', name: 'expiry', type: 'uint256'},
      {internalType: 'uint8', name: 'v', type: 'uint8'},
      {internalType: 'bytes32', name: 'r', type: 'bytes32'},
      {internalType: 'bytes32', name: 's', type: 'bytes32'},
    ],
    name: 'selfPermitAllowedIfNecessary',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'uint256', name: 'value', type: 'uint256'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
      {internalType: 'uint8', name: 'v', type: 'uint8'},
      {internalType: 'bytes32', name: 'r', type: 'bytes32'},
      {internalType: 'bytes32', name: 's', type: 'bytes32'},
    ],
    name: 'selfPermitIfNecessary',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'uint256', name: 'amountMinimum', type: 'uint256'},
      {internalType: 'address', name: 'recipient', type: 'address'},
    ],
    name: 'sweepToken',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'uint256', name: 'amountMinimum', type: 'uint256'},
      {internalType: 'address', name: 'recipient', type: 'address'},
      {internalType: 'uint256', name: 'feeBips', type: 'uint256'},
      {internalType: 'address', name: 'feeRecipient', type: 'address'},
    ],
    name: 'sweepTokenWithFee',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'int256', name: 'amount0Delta', type: 'int256'},
      {internalType: 'int256', name: 'amount1Delta', type: 'int256'},
      {internalType: 'bytes', name: '_data', type: 'bytes'},
    ],
    name: 'uniswapV3SwapCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountMinimum', type: 'uint256'},
      {internalType: 'address', name: 'recipient', type: 'address'},
    ],
    name: 'unwrapWETH9',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountMinimum', type: 'uint256'},
      {internalType: 'address', name: 'recipient', type: 'address'},
      {internalType: 'uint256', name: 'feeBips', type: 'uint256'},
      {internalType: 'address', name: 'feeRecipient', type: 'address'},
    ],
    name: 'unwrapWETH9WithFee',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {stateMutability: 'payable', type: 'receive'},
];

export const UNISWAP_V2_ABI = [
  {
    inputs: [
      {internalType: 'address', name: '_factory', type: 'address'},
      {internalType: 'address', name: '_WETH', type: 'address'},
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'WETH',
    outputs: [{internalType: 'address', name: '', type: 'address'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'tokenA', type: 'address'},
      {internalType: 'address', name: 'tokenB', type: 'address'},
      {internalType: 'uint256', name: 'amountADesired', type: 'uint256'},
      {internalType: 'uint256', name: 'amountBDesired', type: 'uint256'},
      {internalType: 'uint256', name: 'amountAMin', type: 'uint256'},
      {internalType: 'uint256', name: 'amountBMin', type: 'uint256'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'addLiquidity',
    outputs: [
      {internalType: 'uint256', name: 'amountA', type: 'uint256'},
      {internalType: 'uint256', name: 'amountB', type: 'uint256'},
      {internalType: 'uint256', name: 'liquidity', type: 'uint256'},
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'uint256', name: 'amountTokenDesired', type: 'uint256'},
      {internalType: 'uint256', name: 'amountTokenMin', type: 'uint256'},
      {internalType: 'uint256', name: 'amountETHMin', type: 'uint256'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'addLiquidityETH',
    outputs: [
      {internalType: 'uint256', name: 'amountToken', type: 'uint256'},
      {internalType: 'uint256', name: 'amountETH', type: 'uint256'},
      {internalType: 'uint256', name: 'liquidity', type: 'uint256'},
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'factory',
    outputs: [{internalType: 'address', name: '', type: 'address'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountOut', type: 'uint256'},
      {internalType: 'uint256', name: 'reserveIn', type: 'uint256'},
      {internalType: 'uint256', name: 'reserveOut', type: 'uint256'},
    ],
    name: 'getAmountIn',
    outputs: [{internalType: 'uint256', name: 'amountIn', type: 'uint256'}],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountIn', type: 'uint256'},
      {internalType: 'uint256', name: 'reserveIn', type: 'uint256'},
      {internalType: 'uint256', name: 'reserveOut', type: 'uint256'},
    ],
    name: 'getAmountOut',
    outputs: [{internalType: 'uint256', name: 'amountOut', type: 'uint256'}],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountOut', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
    ],
    name: 'getAmountsIn',
    outputs: [{internalType: 'uint256[]', name: 'amounts', type: 'uint256[]'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountIn', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
    ],
    name: 'getAmountsOut',
    outputs: [{internalType: 'uint256[]', name: 'amounts', type: 'uint256[]'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountA', type: 'uint256'},
      {internalType: 'uint256', name: 'reserveA', type: 'uint256'},
      {internalType: 'uint256', name: 'reserveB', type: 'uint256'},
    ],
    name: 'quote',
    outputs: [{internalType: 'uint256', name: 'amountB', type: 'uint256'}],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'tokenA', type: 'address'},
      {internalType: 'address', name: 'tokenB', type: 'address'},
      {internalType: 'uint256', name: 'liquidity', type: 'uint256'},
      {internalType: 'uint256', name: 'amountAMin', type: 'uint256'},
      {internalType: 'uint256', name: 'amountBMin', type: 'uint256'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'removeLiquidity',
    outputs: [
      {internalType: 'uint256', name: 'amountA', type: 'uint256'},
      {internalType: 'uint256', name: 'amountB', type: 'uint256'},
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'uint256', name: 'liquidity', type: 'uint256'},
      {internalType: 'uint256', name: 'amountTokenMin', type: 'uint256'},
      {internalType: 'uint256', name: 'amountETHMin', type: 'uint256'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'removeLiquidityETH',
    outputs: [
      {internalType: 'uint256', name: 'amountToken', type: 'uint256'},
      {internalType: 'uint256', name: 'amountETH', type: 'uint256'},
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'uint256', name: 'liquidity', type: 'uint256'},
      {internalType: 'uint256', name: 'amountTokenMin', type: 'uint256'},
      {internalType: 'uint256', name: 'amountETHMin', type: 'uint256'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'removeLiquidityETHSupportingFeeOnTransferTokens',
    outputs: [{internalType: 'uint256', name: 'amountETH', type: 'uint256'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'uint256', name: 'liquidity', type: 'uint256'},
      {internalType: 'uint256', name: 'amountTokenMin', type: 'uint256'},
      {internalType: 'uint256', name: 'amountETHMin', type: 'uint256'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
      {internalType: 'bool', name: 'approveMax', type: 'bool'},
      {internalType: 'uint8', name: 'v', type: 'uint8'},
      {internalType: 'bytes32', name: 'r', type: 'bytes32'},
      {internalType: 'bytes32', name: 's', type: 'bytes32'},
    ],
    name: 'removeLiquidityETHWithPermit',
    outputs: [
      {internalType: 'uint256', name: 'amountToken', type: 'uint256'},
      {internalType: 'uint256', name: 'amountETH', type: 'uint256'},
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'uint256', name: 'liquidity', type: 'uint256'},
      {internalType: 'uint256', name: 'amountTokenMin', type: 'uint256'},
      {internalType: 'uint256', name: 'amountETHMin', type: 'uint256'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
      {internalType: 'bool', name: 'approveMax', type: 'bool'},
      {internalType: 'uint8', name: 'v', type: 'uint8'},
      {internalType: 'bytes32', name: 'r', type: 'bytes32'},
      {internalType: 'bytes32', name: 's', type: 'bytes32'},
    ],
    name: 'removeLiquidityETHWithPermitSupportingFeeOnTransferTokens',
    outputs: [{internalType: 'uint256', name: 'amountETH', type: 'uint256'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'tokenA', type: 'address'},
      {internalType: 'address', name: 'tokenB', type: 'address'},
      {internalType: 'uint256', name: 'liquidity', type: 'uint256'},
      {internalType: 'uint256', name: 'amountAMin', type: 'uint256'},
      {internalType: 'uint256', name: 'amountBMin', type: 'uint256'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
      {internalType: 'bool', name: 'approveMax', type: 'bool'},
      {internalType: 'uint8', name: 'v', type: 'uint8'},
      {internalType: 'bytes32', name: 'r', type: 'bytes32'},
      {internalType: 'bytes32', name: 's', type: 'bytes32'},
    ],
    name: 'removeLiquidityWithPermit',
    outputs: [
      {internalType: 'uint256', name: 'amountA', type: 'uint256'},
      {internalType: 'uint256', name: 'amountB', type: 'uint256'},
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountOut', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'swapETHForExactTokens',
    outputs: [{internalType: 'uint256[]', name: 'amounts', type: 'uint256[]'}],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountOutMin', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'swapExactETHForTokens',
    outputs: [{internalType: 'uint256[]', name: 'amounts', type: 'uint256[]'}],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountOutMin', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'swapExactETHForTokensSupportingFeeOnTransferTokens',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountIn', type: 'uint256'},
      {internalType: 'uint256', name: 'amountOutMin', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'swapExactTokensForETH',
    outputs: [{internalType: 'uint256[]', name: 'amounts', type: 'uint256[]'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountIn', type: 'uint256'},
      {internalType: 'uint256', name: 'amountOutMin', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'swapExactTokensForETHSupportingFeeOnTransferTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountIn', type: 'uint256'},
      {internalType: 'uint256', name: 'amountOutMin', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'swapExactTokensForTokens',
    outputs: [{internalType: 'uint256[]', name: 'amounts', type: 'uint256[]'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountIn', type: 'uint256'},
      {internalType: 'uint256', name: 'amountOutMin', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'swapExactTokensForTokensSupportingFeeOnTransferTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountOut', type: 'uint256'},
      {internalType: 'uint256', name: 'amountInMax', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'swapTokensForExactETH',
    outputs: [{internalType: 'uint256[]', name: 'amounts', type: 'uint256[]'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountOut', type: 'uint256'},
      {internalType: 'uint256', name: 'amountInMax', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'swapTokensForExactTokens',
    outputs: [{internalType: 'uint256[]', name: 'amounts', type: 'uint256[]'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {stateMutability: 'payable', type: 'receive'},
];

export const SUSHISWAP_ABI = [
  {
    inputs: [
      {internalType: 'address', name: '_factory', type: 'address'},
      {internalType: 'address', name: '_WETH', type: 'address'},
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'WETH',
    outputs: [{internalType: 'address', name: '', type: 'address'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'tokenA', type: 'address'},
      {internalType: 'address', name: 'tokenB', type: 'address'},
      {internalType: 'uint256', name: 'amountADesired', type: 'uint256'},
      {internalType: 'uint256', name: 'amountBDesired', type: 'uint256'},
      {internalType: 'uint256', name: 'amountAMin', type: 'uint256'},
      {internalType: 'uint256', name: 'amountBMin', type: 'uint256'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'addLiquidity',
    outputs: [
      {internalType: 'uint256', name: 'amountA', type: 'uint256'},
      {internalType: 'uint256', name: 'amountB', type: 'uint256'},
      {internalType: 'uint256', name: 'liquidity', type: 'uint256'},
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'uint256', name: 'amountTokenDesired', type: 'uint256'},
      {internalType: 'uint256', name: 'amountTokenMin', type: 'uint256'},
      {internalType: 'uint256', name: 'amountETHMin', type: 'uint256'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'addLiquidityETH',
    outputs: [
      {internalType: 'uint256', name: 'amountToken', type: 'uint256'},
      {internalType: 'uint256', name: 'amountETH', type: 'uint256'},
      {internalType: 'uint256', name: 'liquidity', type: 'uint256'},
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'factory',
    outputs: [{internalType: 'address', name: '', type: 'address'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountOut', type: 'uint256'},
      {internalType: 'uint256', name: 'reserveIn', type: 'uint256'},
      {internalType: 'uint256', name: 'reserveOut', type: 'uint256'},
    ],
    name: 'getAmountIn',
    outputs: [{internalType: 'uint256', name: 'amountIn', type: 'uint256'}],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountIn', type: 'uint256'},
      {internalType: 'uint256', name: 'reserveIn', type: 'uint256'},
      {internalType: 'uint256', name: 'reserveOut', type: 'uint256'},
    ],
    name: 'getAmountOut',
    outputs: [{internalType: 'uint256', name: 'amountOut', type: 'uint256'}],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountOut', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
    ],
    name: 'getAmountsIn',
    outputs: [{internalType: 'uint256[]', name: 'amounts', type: 'uint256[]'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountIn', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
    ],
    name: 'getAmountsOut',
    outputs: [{internalType: 'uint256[]', name: 'amounts', type: 'uint256[]'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountA', type: 'uint256'},
      {internalType: 'uint256', name: 'reserveA', type: 'uint256'},
      {internalType: 'uint256', name: 'reserveB', type: 'uint256'},
    ],
    name: 'quote',
    outputs: [{internalType: 'uint256', name: 'amountB', type: 'uint256'}],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'tokenA', type: 'address'},
      {internalType: 'address', name: 'tokenB', type: 'address'},
      {internalType: 'uint256', name: 'liquidity', type: 'uint256'},
      {internalType: 'uint256', name: 'amountAMin', type: 'uint256'},
      {internalType: 'uint256', name: 'amountBMin', type: 'uint256'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'removeLiquidity',
    outputs: [
      {internalType: 'uint256', name: 'amountA', type: 'uint256'},
      {internalType: 'uint256', name: 'amountB', type: 'uint256'},
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'uint256', name: 'liquidity', type: 'uint256'},
      {internalType: 'uint256', name: 'amountTokenMin', type: 'uint256'},
      {internalType: 'uint256', name: 'amountETHMin', type: 'uint256'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'removeLiquidityETH',
    outputs: [
      {internalType: 'uint256', name: 'amountToken', type: 'uint256'},
      {internalType: 'uint256', name: 'amountETH', type: 'uint256'},
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'uint256', name: 'liquidity', type: 'uint256'},
      {internalType: 'uint256', name: 'amountTokenMin', type: 'uint256'},
      {internalType: 'uint256', name: 'amountETHMin', type: 'uint256'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'removeLiquidityETHSupportingFeeOnTransferTokens',
    outputs: [{internalType: 'uint256', name: 'amountETH', type: 'uint256'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'uint256', name: 'liquidity', type: 'uint256'},
      {internalType: 'uint256', name: 'amountTokenMin', type: 'uint256'},
      {internalType: 'uint256', name: 'amountETHMin', type: 'uint256'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
      {internalType: 'bool', name: 'approveMax', type: 'bool'},
      {internalType: 'uint8', name: 'v', type: 'uint8'},
      {internalType: 'bytes32', name: 'r', type: 'bytes32'},
      {internalType: 'bytes32', name: 's', type: 'bytes32'},
    ],
    name: 'removeLiquidityETHWithPermit',
    outputs: [
      {internalType: 'uint256', name: 'amountToken', type: 'uint256'},
      {internalType: 'uint256', name: 'amountETH', type: 'uint256'},
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'uint256', name: 'liquidity', type: 'uint256'},
      {internalType: 'uint256', name: 'amountTokenMin', type: 'uint256'},
      {internalType: 'uint256', name: 'amountETHMin', type: 'uint256'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
      {internalType: 'bool', name: 'approveMax', type: 'bool'},
      {internalType: 'uint8', name: 'v', type: 'uint8'},
      {internalType: 'bytes32', name: 'r', type: 'bytes32'},
      {internalType: 'bytes32', name: 's', type: 'bytes32'},
    ],
    name: 'removeLiquidityETHWithPermitSupportingFeeOnTransferTokens',
    outputs: [{internalType: 'uint256', name: 'amountETH', type: 'uint256'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'tokenA', type: 'address'},
      {internalType: 'address', name: 'tokenB', type: 'address'},
      {internalType: 'uint256', name: 'liquidity', type: 'uint256'},
      {internalType: 'uint256', name: 'amountAMin', type: 'uint256'},
      {internalType: 'uint256', name: 'amountBMin', type: 'uint256'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
      {internalType: 'bool', name: 'approveMax', type: 'bool'},
      {internalType: 'uint8', name: 'v', type: 'uint8'},
      {internalType: 'bytes32', name: 'r', type: 'bytes32'},
      {internalType: 'bytes32', name: 's', type: 'bytes32'},
    ],
    name: 'removeLiquidityWithPermit',
    outputs: [
      {internalType: 'uint256', name: 'amountA', type: 'uint256'},
      {internalType: 'uint256', name: 'amountB', type: 'uint256'},
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountOut', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'swapETHForExactTokens',
    outputs: [{internalType: 'uint256[]', name: 'amounts', type: 'uint256[]'}],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountOutMin', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'swapExactETHForTokens',
    outputs: [{internalType: 'uint256[]', name: 'amounts', type: 'uint256[]'}],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountOutMin', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'swapExactETHForTokensSupportingFeeOnTransferTokens',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountIn', type: 'uint256'},
      {internalType: 'uint256', name: 'amountOutMin', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'swapExactTokensForETH',
    outputs: [{internalType: 'uint256[]', name: 'amounts', type: 'uint256[]'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountIn', type: 'uint256'},
      {internalType: 'uint256', name: 'amountOutMin', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'swapExactTokensForETHSupportingFeeOnTransferTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountIn', type: 'uint256'},
      {internalType: 'uint256', name: 'amountOutMin', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'swapExactTokensForTokens',
    outputs: [{internalType: 'uint256[]', name: 'amounts', type: 'uint256[]'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountIn', type: 'uint256'},
      {internalType: 'uint256', name: 'amountOutMin', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'swapExactTokensForTokensSupportingFeeOnTransferTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountOut', type: 'uint256'},
      {internalType: 'uint256', name: 'amountInMax', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'swapTokensForExactETH',
    outputs: [{internalType: 'uint256[]', name: 'amounts', type: 'uint256[]'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountOut', type: 'uint256'},
      {internalType: 'uint256', name: 'amountInMax', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'swapTokensForExactTokens',
    outputs: [{internalType: 'uint256[]', name: 'amounts', type: 'uint256[]'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {stateMutability: 'payable', type: 'receive'},
];

export const THORCHAIN_ABI = [
  {
    inputs: [{internalType: 'address', name: 'rune', type: 'address'}],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {indexed: true, internalType: 'address', name: 'to', type: 'address'},
      {indexed: true, internalType: 'address', name: 'asset', type: 'address'},
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {indexed: false, internalType: 'string', name: 'memo', type: 'string'},
    ],
    name: 'Deposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'oldVault',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newVault',
        type: 'address',
      },
      {indexed: false, internalType: 'address', name: 'asset', type: 'address'},
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {indexed: false, internalType: 'string', name: 'memo', type: 'string'},
    ],
    name: 'TransferAllowance',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {indexed: true, internalType: 'address', name: 'vault', type: 'address'},
      {indexed: true, internalType: 'address', name: 'to', type: 'address'},
      {indexed: false, internalType: 'address', name: 'asset', type: 'address'},
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {indexed: false, internalType: 'string', name: 'memo', type: 'string'},
    ],
    name: 'TransferOut',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {indexed: true, internalType: 'address', name: 'vault', type: 'address'},
      {
        indexed: false,
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'finalAsset',
        type: 'address',
      },
      {indexed: false, internalType: 'address', name: 'to', type: 'address'},
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amountOutMin',
        type: 'uint256',
      },
      {indexed: false, internalType: 'string', name: 'memo', type: 'string'},
    ],
    name: 'TransferOutAndCall',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'oldVault',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newVault',
        type: 'address',
      },
      {
        components: [
          {internalType: 'address', name: 'asset', type: 'address'},
          {internalType: 'uint256', name: 'amount', type: 'uint256'},
        ],
        indexed: false,
        internalType: 'struct THORChain_Router.Coin[]',
        name: 'coins',
        type: 'tuple[]',
      },
      {indexed: false, internalType: 'string', name: 'memo', type: 'string'},
    ],
    name: 'VaultTransfer',
    type: 'event',
  },
  {
    inputs: [],
    name: 'RUNE',
    outputs: [{internalType: 'address', name: '', type: 'address'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address payable', name: 'vault', type: 'address'},
      {internalType: 'address', name: 'asset', type: 'address'},
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
      {internalType: 'string', name: 'memo', type: 'string'},
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address payable', name: 'vault', type: 'address'},
      {internalType: 'address', name: 'asset', type: 'address'},
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
      {internalType: 'string', name: 'memo', type: 'string'},
      {internalType: 'uint256', name: 'expiration', type: 'uint256'},
    ],
    name: 'depositWithExpiry',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'router', type: 'address'},
      {internalType: 'address payable', name: 'asgard', type: 'address'},
      {
        components: [
          {internalType: 'address', name: 'asset', type: 'address'},
          {internalType: 'uint256', name: 'amount', type: 'uint256'},
        ],
        internalType: 'struct THORChain_Router.Coin[]',
        name: 'coins',
        type: 'tuple[]',
      },
      {internalType: 'string', name: 'memo', type: 'string'},
    ],
    name: 'returnVaultAssets',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'router', type: 'address'},
      {internalType: 'address', name: 'newVault', type: 'address'},
      {internalType: 'address', name: 'asset', type: 'address'},
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
      {internalType: 'string', name: 'memo', type: 'string'},
    ],
    name: 'transferAllowance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address payable', name: 'to', type: 'address'},
      {internalType: 'address', name: 'asset', type: 'address'},
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
      {internalType: 'string', name: 'memo', type: 'string'},
    ],
    name: 'transferOut',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address payable', name: 'aggregator', type: 'address'},
      {internalType: 'address', name: 'finalToken', type: 'address'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'amountOutMin', type: 'uint256'},
      {internalType: 'string', name: 'memo', type: 'string'},
    ],
    name: 'transferOutAndCall',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'vault', type: 'address'},
      {internalType: 'address', name: 'token', type: 'address'},
    ],
    name: 'vaultAllowance',
    outputs: [{internalType: 'uint256', name: 'amount', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
];
