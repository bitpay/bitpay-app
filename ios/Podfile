def node_require(script)
  # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

# Use it to require both react-native's and this package's scripts:
node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

#######
# Read min iOS version from Xcode project and set as min iOS version for Podfile
require 'xcodeproj'

project_path = './BitPayApp.xcodeproj'
project = Xcodeproj::Project.open(project_path)
min_ios_version_supported = project.build_configurations.first.build_settings['IPHONEOS_DEPLOYMENT_TARGET']
######

platform :ios, min_ios_version_supported
prepare_react_native_project!

# Setup permissions you need
setup_permissions([
'AppTrackingTransparency',
'Bluetooth',
'Camera',
'FaceID',
'Notifications',
])

use_frameworks! :linkage => :static

# Disable Location APIs so we compile out any privacy sensitive APIs
$VCEnableLocation=false

target 'BitPayApp' do
  pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text', :modular_headers => true
  pod 'BrazeUI', :podspec => 'https://raw.githubusercontent.com/braze-inc/braze-swift-sdk-prebuilt-static/11.1.1/BrazeUI.podspec'

  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'BitPayAppTests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    # Workaround for Xcode 16 and iOS 18
    bitcode_strip_path = `xcrun --find bitcode_strip`.chop!
    def strip_bitcode_from_framework(bitcode_strip_path, framework_relative_path)
      framework_path = File.join(Dir.pwd, framework_relative_path)
      command = "#{bitcode_strip_path} #{framework_path} -r -o #{framework_path}"
      puts "Stripping bitcode: #{command}"
      system(command)
    end

    framework_paths = [
      "Pods/LogRocket/LogRocket.xcframework/ios-arm64/LogRocket.framework/LogRocket",
      "Pods/hermes-engine/destroot/Library/Frameworks/macosx/hermes.framework/hermes",
      "Pods/hermes-engine/destroot/Library/Frameworks/macosx/hermes.framework/Versions/Current/hermes",
      "Pods/hermes-engine/destroot/Library/Frameworks/universal/hermes.xcframework/ios-arm64/hermes.framework/hermes",
      "Pods/hermes-engine/destroot/Library/Frameworks/universal/hermes.xcframework/ios-arm64_x86_64-maccatalyst/hermes.framework/hermes"
    ]

    framework_paths.each do |framework_relative_path|
      strip_bitcode_from_framework(bitcode_strip_path, framework_relative_path)
    end
    installer.pods_project.targets.each do |target|
      if target.name == 'InputMask' || target.name == 'YogaKit' || target.name == 'Yoga' || target.name == 'Mixpanel-swift' || target.name == 'MultiplarformBleAdapter' || target.name == 'MultiplatformBleAdapter' || target.name == 'react-native-in-app-review' || target.name == 'MixpanelReactNative' || target.name == 'react-native-text-input-mask'
        puts "Found #{target.name}. Adding Swift Flag..."
        target.build_configurations.each do |config|
          config.build_settings['OTHER_SWIFT_FLAGS'] ||= ['$(inherited)']
          config.build_settings['OTHER_SWIFT_FLAGS'] << '-no-verify-emitted-module-interface'
        end
      end
    end
    react_native_post_install(
      installer,
      # Set `mac_catalyst_enabled` to `true` in order to apply patches
      # necessary for Mac Catalyst builds
      :mac_catalyst_enabled => false
    )
  end
end
